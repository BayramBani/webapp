#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace webapp.App_Code.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="webapp_db")]
	public partial class WebAppDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertAGENT(AGENT instance);
    partial void UpdateAGENT(AGENT instance);
    partial void DeleteAGENT(AGENT instance);
    partial void InsertFONCTION(FONCTION instance);
    partial void UpdateFONCTION(FONCTION instance);
    partial void DeleteFONCTION(FONCTION instance);
    #endregion
		
		public WebAppDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["webapp_dbConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public WebAppDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WebAppDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WebAppDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WebAppDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AGENT> AGENT
		{
			get
			{
				return this.GetTable<AGENT>();
			}
		}
		
		public System.Data.Linq.Table<FONCTION> FONCTION
		{
			get
			{
				return this.GetTable<FONCTION>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AGENT")]
	public partial class AGENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MATRICULE;
		
		private string _NOM;
		
		private string _PRENOM;
		
		private int _CIN;
		
		private System.Nullable<System.DateTime> _DATE_NAISSANCE;
		
		private string _EMAIL;
		
		private string _TELEPHONE;
		
		private string _VILLE;
		
		private string _ADRESSE;
		
		private System.Nullable<int> _FONCTION;
		
		private EntityRef<FONCTION> _FONCTION1;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATRICULEChanging(int value);
    partial void OnMATRICULEChanged();
    partial void OnNOMChanging(string value);
    partial void OnNOMChanged();
    partial void OnPRENOMChanging(string value);
    partial void OnPRENOMChanged();
    partial void OnCINChanging(int value);
    partial void OnCINChanged();
    partial void OnDATE_NAISSANCEChanging(System.Nullable<System.DateTime> value);
    partial void OnDATE_NAISSANCEChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnTELEPHONEChanging(string value);
    partial void OnTELEPHONEChanged();
    partial void OnVILLEChanging(string value);
    partial void OnVILLEChanged();
    partial void OnADRESSEChanging(string value);
    partial void OnADRESSEChanged();
    partial void OnFONCTIONChanging(System.Nullable<int> value);
    partial void OnFONCTIONChanged();
    #endregion
		
		public AGENT()
		{
			this._FONCTION1 = default(EntityRef<FONCTION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATRICULE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MATRICULE
		{
			get
			{
				return this._MATRICULE;
			}
			set
			{
				if ((this._MATRICULE != value))
				{
					this.OnMATRICULEChanging(value);
					this.SendPropertyChanging();
					this._MATRICULE = value;
					this.SendPropertyChanged("MATRICULE");
					this.OnMATRICULEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOM", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NOM
		{
			get
			{
				return this._NOM;
			}
			set
			{
				if ((this._NOM != value))
				{
					this.OnNOMChanging(value);
					this.SendPropertyChanging();
					this._NOM = value;
					this.SendPropertyChanged("NOM");
					this.OnNOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRENOM", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PRENOM
		{
			get
			{
				return this._PRENOM;
			}
			set
			{
				if ((this._PRENOM != value))
				{
					this.OnPRENOMChanging(value);
					this.SendPropertyChanging();
					this._PRENOM = value;
					this.SendPropertyChanged("PRENOM");
					this.OnPRENOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CIN", DbType="Int NOT NULL")]
		public int CIN
		{
			get
			{
				return this._CIN;
			}
			set
			{
				if ((this._CIN != value))
				{
					this.OnCINChanging(value);
					this.SendPropertyChanging();
					this._CIN = value;
					this.SendPropertyChanged("CIN");
					this.OnCINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE_NAISSANCE", DbType="Date")]
		public System.Nullable<System.DateTime> DATE_NAISSANCE
		{
			get
			{
				return this._DATE_NAISSANCE;
			}
			set
			{
				if ((this._DATE_NAISSANCE != value))
				{
					this.OnDATE_NAISSANCEChanging(value);
					this.SendPropertyChanging();
					this._DATE_NAISSANCE = value;
					this.SendPropertyChanged("DATE_NAISSANCE");
					this.OnDATE_NAISSANCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(50)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TELEPHONE", DbType="NVarChar(50)")]
		public string TELEPHONE
		{
			get
			{
				return this._TELEPHONE;
			}
			set
			{
				if ((this._TELEPHONE != value))
				{
					this.OnTELEPHONEChanging(value);
					this.SendPropertyChanging();
					this._TELEPHONE = value;
					this.SendPropertyChanged("TELEPHONE");
					this.OnTELEPHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VILLE", DbType="NVarChar(50)")]
		public string VILLE
		{
			get
			{
				return this._VILLE;
			}
			set
			{
				if ((this._VILLE != value))
				{
					this.OnVILLEChanging(value);
					this.SendPropertyChanging();
					this._VILLE = value;
					this.SendPropertyChanged("VILLE");
					this.OnVILLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADRESSE", DbType="NVarChar(50)")]
		public string ADRESSE
		{
			get
			{
				return this._ADRESSE;
			}
			set
			{
				if ((this._ADRESSE != value))
				{
					this.OnADRESSEChanging(value);
					this.SendPropertyChanging();
					this._ADRESSE = value;
					this.SendPropertyChanged("ADRESSE");
					this.OnADRESSEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FONCTION", DbType="Int")]
		public System.Nullable<int> FONCTION
		{
			get
			{
				return this._FONCTION;
			}
			set
			{
				if ((this._FONCTION != value))
				{
					if (this._FONCTION1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFONCTIONChanging(value);
					this.SendPropertyChanging();
					this._FONCTION = value;
					this.SendPropertyChanged("FONCTION");
					this.OnFONCTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FONCTION_AGENT", Storage="_FONCTION1", ThisKey="FONCTION", OtherKey="ID", IsForeignKey=true)]
		public FONCTION FONCTION1
		{
			get
			{
				return this._FONCTION1.Entity;
			}
			set
			{
				FONCTION previousValue = this._FONCTION1.Entity;
				if (((previousValue != value) 
							|| (this._FONCTION1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FONCTION1.Entity = null;
						previousValue.AGENT.Remove(this);
					}
					this._FONCTION1.Entity = value;
					if ((value != null))
					{
						value.AGENT.Add(this);
						this._FONCTION = value.ID;
					}
					else
					{
						this._FONCTION = default(Nullable<int>);
					}
					this.SendPropertyChanged("FONCTION1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FONCTION")]
	public partial class FONCTION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _LIBELLE;
		
		private EntitySet<AGENT> _AGENT;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLIBELLEChanging(string value);
    partial void OnLIBELLEChanged();
    #endregion
		
		public FONCTION()
		{
			this._AGENT = new EntitySet<AGENT>(new Action<AGENT>(this.attach_AGENT), new Action<AGENT>(this.detach_AGENT));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIBELLE", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LIBELLE
		{
			get
			{
				return this._LIBELLE;
			}
			set
			{
				if ((this._LIBELLE != value))
				{
					this.OnLIBELLEChanging(value);
					this.SendPropertyChanging();
					this._LIBELLE = value;
					this.SendPropertyChanged("LIBELLE");
					this.OnLIBELLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FONCTION_AGENT", Storage="_AGENT", ThisKey="ID", OtherKey="FONCTION")]
		public EntitySet<AGENT> AGENT
		{
			get
			{
				return this._AGENT;
			}
			set
			{
				this._AGENT.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AGENT(AGENT entity)
		{
			this.SendPropertyChanging();
			entity.FONCTION1 = this;
		}
		
		private void detach_AGENT(AGENT entity)
		{
			this.SendPropertyChanging();
			entity.FONCTION1 = null;
		}
	}
}
#pragma warning restore 1591
